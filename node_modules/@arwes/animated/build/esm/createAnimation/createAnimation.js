import { easing } from "../easing/index.js";
const createAnimation = (props) => {
    const { duration: durationProvided, easing: easingName = 'outSine', direction = 'normal', onUpdate, onComplete, onCancel } = props;
    const ease = typeof easingName === 'function' ? easingName : easing[easingName];
    const duration = durationProvided * 1000; // seconds to ms
    let currentAnimationFrame = null;
    let start = window.performance.now();
    let slapsed = 0;
    const nextAnimation = (timestamp) => {
        if (!start) {
            start = timestamp;
        }
        slapsed = Math.max(timestamp - start, 0);
        if (direction === 'reverse') {
            slapsed = duration - slapsed;
        }
        const progress = Math.min(1, Math.max(0, ease(slapsed / duration)));
        const continueAnimation = direction === 'normal' ? slapsed < duration : slapsed > 0;
        onUpdate(progress);
        if (continueAnimation) {
            currentAnimationFrame = window.requestAnimationFrame(nextAnimation);
        }
        else {
            currentAnimationFrame = null;
            onComplete === null || onComplete === void 0 ? void 0 : onComplete();
        }
    };
    currentAnimationFrame = window.requestAnimationFrame(nextAnimation);
    const isPending = () => {
        return currentAnimationFrame !== null;
    };
    const cancel = () => {
        if (currentAnimationFrame !== null) {
            window.cancelAnimationFrame(currentAnimationFrame);
            onCancel === null || onCancel === void 0 ? void 0 : onCancel();
        }
    };
    return { isPending, cancel };
};
export { createAnimation };
