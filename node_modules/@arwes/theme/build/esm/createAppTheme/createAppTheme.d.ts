import type { PartialDeep } from '@arwes/tools';
import type { ThemeCreatorStructure, ThemeSettingsUnit, ThemeSettingsColor, ThemeSettingsStyle, ThemeUnit, ThemeColor, ThemeStyle, ThemeSettingsMultiplier, ThemeMultiplier } from '../types';
interface AppThemeSettingsPalette {
    main: ThemeSettingsColor;
    text: ThemeSettingsColor;
    bg: ThemeSettingsColor;
    ol: ThemeSettingsColor;
    deco: ThemeSettingsColor;
}
interface AppThemeSettingsColors {
    primary: AppThemeSettingsPalette;
    secondary: AppThemeSettingsPalette;
    success: AppThemeSettingsPalette;
    info: AppThemeSettingsPalette;
    warning: AppThemeSettingsPalette;
    error: AppThemeSettingsPalette;
}
interface AppThemeSettingsHues {
    primary: number;
    secondary: number;
    success: number;
    info: number;
    warning: number;
    error: number;
}
interface AppThemeSettings {
    dark: boolean;
    space: ThemeSettingsUnit;
    spaceN: ThemeSettingsMultiplier;
    hues: AppThemeSettingsHues;
    colors: AppThemeSettingsColors;
    fontFamilies: {
        title: string;
        body: string;
        cta: string;
        input: string;
        code: string;
    };
    typography: {
        title: ThemeSettingsStyle;
        body: ThemeSettingsStyle;
        cta: ThemeSettingsStyle;
        input: ThemeSettingsStyle;
        code: ThemeSettingsStyle;
    };
    transitions: {
        duration: ThemeSettingsUnit;
        durationN: ThemeSettingsMultiplier;
    };
}
interface AppThemePalette {
    main: ThemeColor;
    text: ThemeColor;
    bg: ThemeColor;
    ol: ThemeColor;
    deco: ThemeColor;
}
interface AppThemeColors {
    primary: AppThemePalette;
    secondary: AppThemePalette;
    success: AppThemePalette;
    info: AppThemePalette;
    warning: AppThemePalette;
    error: AppThemePalette;
}
type AppThemeHues = AppThemeSettingsHues;
interface AppTheme {
    dark: boolean;
    space: ThemeUnit;
    spaceN: ThemeMultiplier;
    hues: AppThemeHues;
    colors: AppThemeColors;
    fontFamilies: {
        title: string;
        body: string;
        cta: string;
        input: string;
        code: string;
    };
    typography: {
        title: ThemeStyle;
        body: ThemeStyle;
        cta: ThemeStyle;
        input: ThemeStyle;
        code: ThemeStyle;
    };
    transitions: {
        duration: ThemeUnit;
        durationN: ThemeMultiplier;
    };
}
declare const APP_THEME_STRUCTURE_PALETTE: ThemeCreatorStructure;
declare const APP_THEME_STRUCTURE: ThemeCreatorStructure;
interface CreateAppThemeProps<AppThemeSettingsExt extends AppThemeSettings = AppThemeSettings> {
    structure?: ThemeCreatorStructure;
    settings?: PartialDeep<AppThemeSettingsExt>;
}
declare const createAppThemePalette: (hue: number) => AppThemeSettingsPalette;
declare const createAppTheme: <AppThemeSettingsExt extends AppThemeSettings = AppThemeSettings, AppThemeExt extends AppTheme = AppTheme>(props?: CreateAppThemeProps<AppThemeSettingsExt>) => AppThemeExt;
export type { AppThemeSettingsColors, AppThemeSettingsPalette, AppThemeSettingsHues, AppThemeSettings, AppThemePalette, AppThemeColors, AppThemeHues, AppTheme, CreateAppThemeProps };
export { APP_THEME_STRUCTURE_PALETTE, APP_THEME_STRUCTURE, createAppThemePalette, createAppTheme };
